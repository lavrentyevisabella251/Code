class Food:
    def __init__(self, name, calories, proteins, fats, carbohydrates):
        self.name = name
        self.calories = calories
        self.proteins = proteins
        self.fats = fats
        self.carbohydrates = carbohydrates

    def display_info(self):
        print(f"\nNutritional information for {self.name}:")
        print(f"Calories: {self.calories} kcal")
        print(f"Proteins: {self.proteins} g")
        print(f"Fats: {self.fats} g")
        print(f"Carbohydrates: {self.carbohydrates} g")

def main():
    foods = []

    while True:
        print("\n1. Add a new food")
        print("2. View nutritional information")
        print("3. Exit")

        choice = input("Enter your choice (1, 2, or 3): ")

        if choice == "1":
            name = input("Enter the name of the food: ")
            calories = float(input("Enter the calories: "))
            proteins = float(input("Enter the proteins in grams: "))
            fats = float(input("Enter the fats in grams: "))
            carbohydrates = float(input("Enter the carbohydrates in grams: "))

            food = Food(name, calories, proteins, fats, carbohydrates)
            foods.append(food)
            print(f"{name} added to the list!")

        elif choice == "2":
            if not foods:
                print("No foods added yet. Add a food first.")
            else:
                print("\nList of foods:")
                for i, food in enumerate(foods, 1):
                    print(f"{i}. {food.name}")

                food_choice = int(input("Enter the number of the food to view nutritional information: "))
                if 1 <= food_choice <= len(foods):
                    selected_food = foods[food_choice - 1]
                    selected_food.display_info()
                else:
                    print("Invalid choice. Please enter a valid number.")

        elif choice == "3":
            print("Exiting the program. Goodbye!")
            break

        else:
            print("Invalid choice. Please enter 1, 2, or 3.")

if __name__ == "__main__":
    main()
